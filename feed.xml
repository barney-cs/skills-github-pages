<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2025-01-10T04:24:21+00:00</updated><id>/feed.xml</id><title type="html">技术分享</title><subtitle>分享技术，记录生活</subtitle><entry><title type="html">ShenYu 网关实践指南：架构设计与功能扩展</title><link href="/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E5%BE%AE%E6%9C%8D%E5%8A%A1/2024/12/30/ShenYu-Gateway-Practice.html" rel="alternate" type="text/html" title="ShenYu 网关实践指南：架构设计与功能扩展" /><published>2024-12-30T00:00:00+00:00</published><updated>2024-12-30T00:00:00+00:00</updated><id>/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E5%BE%AE%E6%9C%8D%E5%8A%A1/2024/12/30/ShenYu-Gateway-Practice</id><content type="html" xml:base="/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E5%BE%AE%E6%9C%8D%E5%8A%A1/2024/12/30/ShenYu-Gateway-Practice.html"><![CDATA[<h1 id="shenyu-网关实践指南架构设计与功能扩展">ShenYu 网关实践指南：架构设计与功能扩展</h1>

<h2 id="简介">简介</h2>

<p>Apache ShenYu 是一个异步的、高性能的、跨语言的、响应式的 API 网关。本文将详细介绍 ShenYu 的架构设计、核心功能以及实际应用中的最佳实践。</p>

<h2 id="核心特性">核心特性</h2>

<h3 id="1-插件化架构">1. 插件化架构</h3>

<p>ShenYu 采用插件化设计，主要包括：</p>

<ul>
  <li>流量控制插件</li>
  <li>安全认证插件</li>
  <li>监控统计插件</li>
  <li>协议转换插件</li>
</ul>

<h3 id="2-动态配置">2. 动态配置</h3>

<p>通过 Admin 控制台实现配置的动态变更：</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># application.yml</span>
<span class="na">shenyu</span><span class="pi">:</span>
  <span class="na">sync</span><span class="pi">:</span>
    <span class="na">websocket</span><span class="pi">:</span>
      <span class="na">enabled</span><span class="pi">:</span> <span class="kc">true</span>
      <span class="na">urls</span><span class="pi">:</span> <span class="s">ws://localhost:9095/websocket</span>
</code></pre></div></div>

<h2 id="实战应用">实战应用</h2>

<h3 id="1-环境搭建">1. 环境搭建</h3>

<h4 id="docker-部署">Docker 部署</h4>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">version</span><span class="pi">:</span> <span class="s2">"</span><span class="s">3.8"</span>
<span class="na">services</span><span class="pi">:</span>
  <span class="na">shenyu-admin</span><span class="pi">:</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">apache/shenyu-admin:latest</span>
    <span class="na">ports</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s2">"</span><span class="s">9095:9095"</span>
    <span class="na">environment</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">SPRING_PROFILES_ACTIVE=mysql</span>
      
  <span class="na">shenyu-bootstrap</span><span class="pi">:</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">apache/shenyu-bootstrap:latest</span>
    <span class="na">ports</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s2">"</span><span class="s">9195:9195"</span>
    <span class="na">depends_on</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">shenyu-admin</span>
</code></pre></div></div>

<h4 id="数据库初始化">数据库初始化</h4>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">CREATE</span> <span class="k">DATABASE</span> <span class="n">shenyu</span> <span class="k">DEFAULT</span> <span class="nb">CHARACTER</span> <span class="k">SET</span> <span class="n">utf8mb4</span> <span class="k">COLLATE</span> <span class="n">utf8mb4_unicode_ci</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="2-插件配置">2. 插件配置</h3>

<h4 id="限流插件">限流插件</h4>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Configuration</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">RateLimiterConfig</span> <span class="o">{</span>
    <span class="nd">@Bean</span>
    <span class="kd">public</span> <span class="nc">RateLimiterPlugin</span> <span class="nf">rateLimiterPlugin</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nf">RateLimiterPlugin</span><span class="o">(</span><span class="k">new</span> <span class="nc">RedisRateLimiter</span><span class="o">());</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>配置规则：</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"path"</span><span class="p">:</span><span class="w"> </span><span class="s2">"/api/**"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"rateLimit"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"capacity"</span><span class="p">:</span><span class="w"> </span><span class="mi">100</span><span class="p">,</span><span class="w">
        </span><span class="nl">"rate"</span><span class="p">:</span><span class="w"> </span><span class="mi">10</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h4 id="jwt-认证插件">JWT 认证插件</h4>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Configuration</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">JwtConfig</span> <span class="o">{</span>
    <span class="nd">@Bean</span>
    <span class="kd">public</span> <span class="nc">JwtPlugin</span> <span class="nf">jwtPlugin</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nf">JwtPlugin</span><span class="o">(</span><span class="k">new</span> <span class="nc">JwtService</span><span class="o">());</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>配置示例：</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">shenyu</span><span class="pi">:</span>
  <span class="na">jwt</span><span class="pi">:</span>
    <span class="na">secret</span><span class="pi">:</span> <span class="s">your-secret-key</span>
    <span class="na">expire</span><span class="pi">:</span> <span class="m">3600</span>
</code></pre></div></div>

<h3 id="3-服务注册">3. 服务注册</h3>

<h4 id="spring-cloud-接入">Spring Cloud 接入</h4>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@SpringBootApplication</span>
<span class="nd">@ShenyuSpringCloudClient</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Application</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="nc">Application</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>配置服务：</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">shenyu</span><span class="pi">:</span>
  <span class="na">client</span><span class="pi">:</span>
    <span class="na">register-type</span><span class="pi">:</span> <span class="s">http</span>
    <span class="na">server-lists</span><span class="pi">:</span> <span class="s">http://localhost:9095</span>
    <span class="na">props</span><span class="pi">:</span>
      <span class="na">contextPath</span><span class="pi">:</span> <span class="s">/api</span>
      <span class="na">appName</span><span class="pi">:</span> <span class="s">spring-cloud-service</span>
</code></pre></div></div>

<h4 id="dubbo-接入">Dubbo 接入</h4>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@DubboService</span>
<span class="nd">@ShenyuDubboClient</span><span class="o">(</span><span class="n">path</span> <span class="o">=</span> <span class="s">"/user"</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">UserServiceImpl</span> <span class="kd">implements</span> <span class="nc">UserService</span> <span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="nd">@ShenyuDubboClient</span><span class="o">(</span><span class="n">path</span> <span class="o">=</span> <span class="s">"/findById"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">User</span> <span class="nf">findById</span><span class="o">(</span><span class="nc">Long</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">userRepository</span><span class="o">.</span><span class="na">findById</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="4-自定义插件开发">4. 自定义插件开发</h3>

<h4 id="插件实现">插件实现</h4>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Component</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CustomPlugin</span> <span class="kd">extends</span> <span class="nc">AbstractShenyuPlugin</span> <span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">Mono</span><span class="o">&lt;</span><span class="nc">Void</span><span class="o">&gt;</span> <span class="nf">execute</span><span class="o">(</span><span class="nc">ShenyuPluginChain</span> <span class="n">chain</span><span class="o">,</span> <span class="nc">ServerWebExchange</span> <span class="n">exchange</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// 插件逻辑实现</span>
        <span class="k">return</span> <span class="n">chain</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">exchange</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getOrder</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">named</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="s">"custom-plugin"</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h4 id="插件配置">插件配置</h4>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Configuration</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">PluginConfiguration</span> <span class="o">{</span>
    <span class="nd">@Bean</span>
    <span class="kd">public</span> <span class="nc">PluginDataHandler</span> <span class="nf">customPluginDataHandler</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nf">CustomPluginDataHandler</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="性能优化">性能优化</h2>

<h3 id="1-线程池优化">1. 线程池优化</h3>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">shenyu</span><span class="pi">:</span>
  <span class="na">netty</span><span class="pi">:</span>
    <span class="na">tcp</span><span class="pi">:</span>
      <span class="na">selectCount</span><span class="pi">:</span> <span class="m">1</span>
      <span class="na">workerCount</span><span class="pi">:</span> <span class="m">4</span>
      <span class="na">connectTimeoutMillis</span><span class="pi">:</span> <span class="m">10000</span>
</code></pre></div></div>

<h3 id="2-内存优化">2. 内存优化</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># JVM参数优化</span>
<span class="nt">-Xms4g</span>
<span class="nt">-Xmx4g</span>
<span class="nt">-XX</span>:+UseG1GC
<span class="nt">-XX</span>:MaxGCPauseMillis<span class="o">=</span>100
</code></pre></div></div>

<h3 id="3-缓存优化">3. 缓存优化</h3>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">shenyu</span><span class="pi">:</span>
  <span class="na">cache</span><span class="pi">:</span>
    <span class="na">type</span><span class="pi">:</span> <span class="s">caffeine</span>
    <span class="na">caffeine</span><span class="pi">:</span>
      <span class="na">initialCapacity</span><span class="pi">:</span> <span class="m">10000</span>
      <span class="na">maximumSize</span><span class="pi">:</span> <span class="m">100000</span>
      <span class="na">expireAfterWrite</span><span class="pi">:</span> <span class="s">60s</span>
</code></pre></div></div>

<h2 id="监控运维">监控运维</h2>

<h3 id="1-监控指标">1. 监控指标</h3>

<h4 id="metrics-配置">Metrics 配置</h4>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">shenyu</span><span class="pi">:</span>
  <span class="na">metrics</span><span class="pi">:</span>
    <span class="na">enabled</span><span class="pi">:</span> <span class="kc">true</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s">prometheus</span>
    <span class="na">host</span><span class="pi">:</span> <span class="s">127.0.0.1</span>
    <span class="na">port</span><span class="pi">:</span> <span class="m">8090</span>
    <span class="na">jmxConfig</span><span class="pi">:</span>
      <span class="na">enabled</span><span class="pi">:</span> <span class="kc">true</span>
</code></pre></div></div>

<h4 id="grafana-面板">Grafana 面板</h4>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"dashboard"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"panels"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
            </span><span class="p">{</span><span class="w">
                </span><span class="nl">"title"</span><span class="p">:</span><span class="w"> </span><span class="s2">"QPS"</span><span class="p">,</span><span class="w">
                </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"graph"</span><span class="p">,</span><span class="w">
                </span><span class="nl">"datasource"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Prometheus"</span><span class="p">,</span><span class="w">
                </span><span class="nl">"targets"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                    </span><span class="p">{</span><span class="w">
                        </span><span class="nl">"expr"</span><span class="p">:</span><span class="w"> </span><span class="s2">"rate(shenyu_request_total[1m])"</span><span class="w">
                    </span><span class="p">}</span><span class="w">
                </span><span class="p">]</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">]</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h3 id="2-日志配置">2. 日志配置</h3>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">logging</span><span class="pi">:</span>
  <span class="na">level</span><span class="pi">:</span>
    <span class="na">root</span><span class="pi">:</span> <span class="s">INFO</span>
    <span class="na">org.apache.shenyu</span><span class="pi">:</span> <span class="s">DEBUG</span>
  <span class="na">file</span><span class="pi">:</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s">./logs/shenyu-bootstrap.log</span>
</code></pre></div></div>

<h3 id="3-告警配置">3. 告警配置</h3>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">shenyu</span><span class="pi">:</span>
  <span class="na">alert</span><span class="pi">:</span>
    <span class="na">enabled</span><span class="pi">:</span> <span class="kc">true</span>
    <span class="na">type</span><span class="pi">:</span> <span class="s">webhook</span>
    <span class="na">webhook</span><span class="pi">:</span>
      <span class="na">url</span><span class="pi">:</span> <span class="s">http://alert-server/webhook</span>
</code></pre></div></div>

<h2 id="最佳实践">最佳实践</h2>

<h3 id="1-高可用部署">1. 高可用部署</h3>

<h4 id="admin-集群">Admin 集群</h4>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">shenyu</span><span class="pi">:</span>
  <span class="na">database</span><span class="pi">:</span>
    <span class="na">dialect</span><span class="pi">:</span> <span class="s">mysql</span>
    <span class="na">init_script</span><span class="pi">:</span> <span class="s2">"</span><span class="s">sql/schema.sql"</span>
  <span class="na">sync</span><span class="pi">:</span>
    <span class="na">zookeeper</span><span class="pi">:</span>
      <span class="na">url</span><span class="pi">:</span> <span class="s">localhost:2181</span>
      <span class="na">sessionTimeout</span><span class="pi">:</span> <span class="m">5000</span>
      <span class="na">connectionTimeout</span><span class="pi">:</span> <span class="m">2000</span>
</code></pre></div></div>

<h4 id="gateway-集群">Gateway 集群</h4>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">spring</span><span class="pi">:</span>
  <span class="na">cloud</span><span class="pi">:</span>
    <span class="na">nacos</span><span class="pi">:</span>
      <span class="na">discovery</span><span class="pi">:</span>
        <span class="na">server-addr</span><span class="pi">:</span> <span class="s">localhost:8848</span>
        <span class="na">namespace</span><span class="pi">:</span> <span class="s">shenyu</span>
</code></pre></div></div>

<h3 id="2-灰度发布">2. 灰度发布</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@ShenyuSpringCloudClient</span><span class="o">(</span><span class="n">path</span> <span class="o">=</span> <span class="s">"/user"</span><span class="o">)</span>
<span class="nd">@RestController</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">UserController</span> <span class="o">{</span>
    <span class="nd">@GetMapping</span><span class="o">(</span><span class="s">"/info"</span><span class="o">)</span>
    <span class="nd">@ShenyuSpringCloudClient</span><span class="o">(</span><span class="n">path</span> <span class="o">=</span> <span class="s">"/info"</span><span class="o">,</span> <span class="n">gray</span> <span class="o">=</span> <span class="kc">true</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">User</span> <span class="nf">getInfo</span><span class="o">()</span> <span class="o">{</span>
        <span class="c1">// 灰度版本逻辑</span>
        <span class="k">return</span> <span class="n">userService</span><span class="o">.</span><span class="na">getInfo</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="3-服务降级">3. 服务降级</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Configuration</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">FallbackConfig</span> <span class="o">{</span>
    <span class="nd">@Bean</span>
    <span class="kd">public</span> <span class="nc">ShenyuFallbackHandler</span> <span class="nf">fallbackHandler</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">exchange</span> <span class="o">-&gt;</span> <span class="o">{</span>
            <span class="n">exchange</span><span class="o">.</span><span class="na">getResponse</span><span class="o">().</span><span class="na">setStatusCode</span><span class="o">(</span><span class="nc">HttpStatus</span><span class="o">.</span><span class="na">SERVICE_UNAVAILABLE</span><span class="o">);</span>
            <span class="k">return</span> <span class="n">exchange</span><span class="o">.</span><span class="na">getResponse</span><span class="o">().</span><span class="na">writeWith</span><span class="o">(</span>
                <span class="nc">Mono</span><span class="o">.</span><span class="na">just</span><span class="o">(</span><span class="n">exchange</span><span class="o">.</span><span class="na">getResponse</span><span class="o">().</span><span class="na">bufferFactory</span><span class="o">().</span><span class="na">wrap</span><span class="o">(</span><span class="s">"Service unavailable"</span><span class="o">.</span><span class="na">getBytes</span><span class="o">()))</span>
            <span class="o">);</span>
        <span class="o">};</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="总结">总结</h2>

<p>ShenYu 网关作为一个高性能的 API 网关，通过其插件化架构和丰富的功能特性，能够很好地满足微服务架构下的网关需求。本文介绍的实践经验和优化建议，都是基于实际生产环境的应用总结。</p>

<h2 id="参考资料">参考资料</h2>

<ul>
  <li><a href="https://shenyu.apache.org/docs/index/">Apache ShenYu 官方文档</a></li>
  <li><a href="https://github.com/apache/shenyu">ShenYu Github</a></li>
  <li><a href="https://shenyu.apache.org/blog/">ShenYu 实践案例</a></li>
</ul>]]></content><author><name></name></author><category term="技术分享" /><category term="微服务" /><category term="ShenYu" /><category term="API网关" /><category term="微服务架构" /><summary type="html"><![CDATA[ShenYu 网关实践指南：架构设计与功能扩展]]></summary></entry><entry><title type="html">ElasticSearch 集群管理与运维指南</title><link href="/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/2024/12/25/ElasticSearch-Cluster-Management.html" rel="alternate" type="text/html" title="ElasticSearch 集群管理与运维指南" /><published>2024-12-25T00:00:00+00:00</published><updated>2024-12-25T00:00:00+00:00</updated><id>/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/2024/12/25/ElasticSearch-Cluster-Management</id><content type="html" xml:base="/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/2024/12/25/ElasticSearch-Cluster-Management.html"><![CDATA[<h1 id="elasticsearch-集群管理与运维指南">ElasticSearch 集群管理与运维指南</h1>

<h2 id="集群架构设计">集群架构设计</h2>

<h3 id="1-节点角色规划">1. 节点角色规划</h3>

<p>ElasticSearch 集群中的节点可以承担不同的角色：</p>

<ul>
  <li>Master 节点：负责集群管理</li>
  <li>Data 节点：存储数据和执行操作</li>
  <li>Coordinating 节点：负责请求路由</li>
  <li>Ingest 节点：数据预处理</li>
</ul>

<p>配置示例：</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># elasticsearch.yml</span>
<span class="na">node.master</span><span class="pi">:</span> <span class="kc">true</span>
<span class="na">node.data</span><span class="pi">:</span> <span class="kc">false</span>
<span class="na">node.ingest</span><span class="pi">:</span> <span class="kc">false</span>
</code></pre></div></div>

<h3 id="2-集群规模评估">2. 集群规模评估</h3>

<h4 id="资源需求计算">资源需求计算</h4>

<ul>
  <li>存储空间 = 原始数据 * (1 + 副本数) * (1 + 索引开销)</li>
  <li>内存分配 = JVM堆内存 + 操作系统缓存</li>
</ul>

<h4 id="节点配置建议">节点配置建议</h4>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 主节点配置</span>
<span class="na">cluster.name</span><span class="pi">:</span> <span class="s">es-prod</span>
<span class="na">node.name</span><span class="pi">:</span> <span class="s">master-1</span>
<span class="na">node.master</span><span class="pi">:</span> <span class="kc">true</span>
<span class="na">node.data</span><span class="pi">:</span> <span class="kc">false</span>
<span class="na">network.host</span><span class="pi">:</span> <span class="s">192.168.1.10</span>
<span class="na">discovery.seed_hosts</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">192.168.1.10"</span><span class="pi">,</span> <span class="s2">"</span><span class="s">192.168.1.11"</span><span class="pi">,</span> <span class="s2">"</span><span class="s">192.168.1.12"</span><span class="pi">]</span>
<span class="na">cluster.initial_master_nodes</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">master-1"</span><span class="pi">]</span>

<span class="c1"># 数据节点配置</span>
<span class="na">cluster.name</span><span class="pi">:</span> <span class="s">es-prod</span>
<span class="na">node.name</span><span class="pi">:</span> <span class="s">data-1</span>
<span class="na">node.master</span><span class="pi">:</span> <span class="kc">false</span>
<span class="na">node.data</span><span class="pi">:</span> <span class="kc">true</span>
<span class="na">network.host</span><span class="pi">:</span> <span class="s">192.168.1.20</span>
<span class="na">discovery.seed_hosts</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">192.168.1.10"</span><span class="pi">,</span> <span class="s2">"</span><span class="s">192.168.1.11"</span><span class="pi">,</span> <span class="s2">"</span><span class="s">192.168.1.12"</span><span class="pi">]</span>
</code></pre></div></div>

<h2 id="集群运维管理">集群运维管理</h2>

<h3 id="1-集群扩容">1. 集群扩容</h3>

<h4 id="水平扩容">水平扩容</h4>

<ol>
  <li>准备新节点</li>
  <li>配置新节点</li>
  <li>启动并加入集群</li>
  <li>等待数据再平衡</li>
</ol>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 检查集群状态</span>
GET _cluster/health

<span class="c"># 查看节点列表</span>
GET _cat/nodes?v

<span class="c"># 监控再平衡进度</span>
GET _cat/recovery?v
</code></pre></div></div>

<h4 id="垂直扩容">垂直扩容</h4>

<ol>
  <li>升级节点配置</li>
  <li>调整 JVM 参数</li>
</ol>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># jvm.options</span>
<span class="nt">-Xms16g</span>
<span class="nt">-Xmx16g</span>
</code></pre></div></div>

<h3 id="2-数据备份与恢复">2. 数据备份与恢复</h3>

<h4 id="快照管理">快照管理</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 注册快照仓库</span>
PUT _snapshot/my_backup
<span class="o">{</span>
    <span class="s2">"type"</span>: <span class="s2">"fs"</span>,
    <span class="s2">"settings"</span>: <span class="o">{</span>
        <span class="s2">"location"</span>: <span class="s2">"/mount/backups/es"</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="c"># 创建快照</span>
PUT _snapshot/my_backup/snapshot_1
<span class="o">{</span>
    <span class="s2">"indices"</span>: <span class="s2">"index_*"</span>,
    <span class="s2">"ignore_unavailable"</span>: <span class="nb">true</span>
<span class="o">}</span>

<span class="c"># 恢复快照</span>
POST _snapshot/my_backup/snapshot_1/_restore
<span class="o">{</span>
    <span class="s2">"indices"</span>: <span class="s2">"index_1"</span>,
    <span class="s2">"rename_pattern"</span>: <span class="s2">"index_(.+)"</span>,
    <span class="s2">"rename_replacement"</span>: <span class="s2">"restored_index_</span><span class="nv">$1</span><span class="s2">"</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="3-集群监控">3. 集群监控</h3>

<h4 id="监控指标">监控指标</h4>

<ol>
  <li>集群健康状态</li>
  <li>节点状态</li>
  <li>索引状态</li>
  <li>分片分配</li>
  <li>JVM 使用情况</li>
</ol>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 查看集群统计信息</span>
GET _cluster/stats

<span class="c"># 查看节点统计信息</span>
GET _nodes/stats

<span class="c"># 查看索引统计信息</span>
GET _cat/indices?v
</code></pre></div></div>

<h4 id="监控工具">监控工具</h4>

<ul>
  <li>Kibana Monitoring</li>
  <li>Elasticsearch Exporter + Prometheus + Grafana</li>
  <li>ElasticHQ</li>
</ul>

<h3 id="4-性能调优">4. 性能调优</h3>

<h4 id="系统层面">系统层面</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 系统参数优化</span>
vm.max_map_count<span class="o">=</span>262144
vm.swappiness<span class="o">=</span>1
</code></pre></div></div>

<h4 id="es配置层面">ES配置层面</h4>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># elasticsearch.yml</span>
<span class="na">indices.memory.index_buffer_size</span><span class="pi">:</span> <span class="s">30%</span>
<span class="na">indices.queries.cache.size</span><span class="pi">:</span> <span class="s">20%</span>
<span class="na">thread_pool.write.queue_size</span><span class="pi">:</span> <span class="m">1000</span>
</code></pre></div></div>

<h2 id="问题排查与解决">问题排查与解决</h2>

<h3 id="1-集群红色状态处理">1. 集群红色状态处理</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 查看集群健康状态</span>
GET _cluster/health

<span class="c"># 查看未分配分片</span>
GET _cat/shards?v&amp;h<span class="o">=</span>index,shard,prirep,state,unassigned.reason

<span class="c"># 手动分配分片</span>
POST _cluster/reroute
<span class="o">{</span>
    <span class="s2">"commands"</span>: <span class="o">[</span>
        <span class="o">{</span>
            <span class="s2">"allocate_replica"</span>: <span class="o">{</span>
                <span class="s2">"index"</span>: <span class="s2">"my_index"</span>,
                <span class="s2">"shard"</span>: 0,
                <span class="s2">"node"</span>: <span class="s2">"node_name"</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">]</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="2-性能问题排查">2. 性能问题排查</h3>

<h4 id="慢查询分析">慢查询分析</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 开启慢查询日志</span>
PUT _cluster/settings
<span class="o">{</span>
    <span class="s2">"transient"</span>: <span class="o">{</span>
        <span class="s2">"index.search.slowlog.threshold.query.warn"</span>: <span class="s2">"10s"</span>,
        <span class="s2">"index.search.slowlog.threshold.fetch.warn"</span>: <span class="s2">"1s"</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="c"># 查看热点线程</span>
GET _nodes/hot_threads
</code></pre></div></div>

<h4 id="内存问题排查">内存问题排查</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 查看段合并情况</span>
GET _cat/segments?v

<span class="c"># 强制合并</span>
POST my_index/_forcemerge
</code></pre></div></div>

<h2 id="日常运维操作">日常运维操作</h2>

<h3 id="1-索引生命周期管理">1. 索引生命周期管理</h3>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">PUT</span><span class="w"> </span><span class="err">_ilm/policy/my_policy</span><span class="w">
</span><span class="p">{</span><span class="w">
    </span><span class="nl">"policy"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"phases"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="nl">"hot"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"actions"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                    </span><span class="nl">"rollover"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                        </span><span class="nl">"max_size"</span><span class="p">:</span><span class="w"> </span><span class="s2">"50GB"</span><span class="p">,</span><span class="w">
                        </span><span class="nl">"max_age"</span><span class="p">:</span><span class="w"> </span><span class="s2">"30d"</span><span class="w">
                    </span><span class="p">}</span><span class="w">
                </span><span class="p">}</span><span class="w">
            </span><span class="p">},</span><span class="w">
            </span><span class="nl">"warm"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"min_age"</span><span class="p">:</span><span class="w"> </span><span class="s2">"30d"</span><span class="p">,</span><span class="w">
                </span><span class="nl">"actions"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                    </span><span class="nl">"shrink"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                        </span><span class="nl">"number_of_shards"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="w">
                    </span><span class="p">},</span><span class="w">
                    </span><span class="nl">"forcemerge"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                        </span><span class="nl">"max_num_segments"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="w">
                    </span><span class="p">}</span><span class="w">
                </span><span class="p">}</span><span class="w">
            </span><span class="p">},</span><span class="w">
            </span><span class="nl">"cold"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"min_age"</span><span class="p">:</span><span class="w"> </span><span class="s2">"60d"</span><span class="p">,</span><span class="w">
                </span><span class="nl">"actions"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                    </span><span class="nl">"freeze"</span><span class="p">:</span><span class="w"> </span><span class="p">{}</span><span class="w">
                </span><span class="p">}</span><span class="w">
            </span><span class="p">},</span><span class="w">
            </span><span class="nl">"delete"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"min_age"</span><span class="p">:</span><span class="w"> </span><span class="s2">"90d"</span><span class="p">,</span><span class="w">
                </span><span class="nl">"actions"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                    </span><span class="nl">"delete"</span><span class="p">:</span><span class="w"> </span><span class="p">{}</span><span class="w">
                </span><span class="p">}</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h3 id="2-集群升级">2. 集群升级</h3>

<h4 id="滚动升级步骤">滚动升级步骤</h4>

<ol>
  <li>禁用分片分配
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>PUT _cluster/settings
<span class="o">{</span>
 <span class="s2">"persistent"</span>: <span class="o">{</span>
     <span class="s2">"cluster.routing.allocation.enable"</span>: <span class="s2">"none"</span>
 <span class="o">}</span>
<span class="o">}</span>
</code></pre></div>    </div>
  </li>
  <li>停止单个节点</li>
  <li>升级节点</li>
  <li>启动节点并确认加入集群</li>
  <li>重新启用分片分配
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>PUT _cluster/settings
<span class="o">{</span>
 <span class="s2">"persistent"</span>: <span class="o">{</span>
     <span class="s2">"cluster.routing.allocation.enable"</span>: null
 <span class="o">}</span>
<span class="o">}</span>
</code></pre></div>    </div>
  </li>
  <li>等待集群恢复</li>
  <li>重复以上步骤直到所有节点升级完成</li>
</ol>

<h2 id="总结">总结</h2>

<p>ElasticSearch 集群的管理和运维是一个复杂的工作，需要对系统有深入的了解。本文介绍的内容涵盖了日常运维中的主要场景，希望能够帮助大家更好地管理 ElasticSearch 集群。</p>

<h2 id="参考资料">参考资料</h2>

<ul>
  <li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/operations.html">ElasticSearch 运维实战</a></li>
  <li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-management.html">ElasticSearch 集群管理</a></li>
  <li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/monitoring-overview.html">ElasticSearch 监控指南</a></li>
</ul>]]></content><author><name></name></author><category term="技术分享" /><category term="搜索引擎" /><category term="ElasticSearch" /><category term="集群管理" /><category term="运维" /><summary type="html"><![CDATA[ElasticSearch 集群管理与运维指南]]></summary></entry><entry><title type="html">ElasticSearch 最佳实践：从入门到精通</title><link href="/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/2024/12/20/ElasticSearch-Best-Practices.html" rel="alternate" type="text/html" title="ElasticSearch 最佳实践：从入门到精通" /><published>2024-12-20T00:00:00+00:00</published><updated>2024-12-20T00:00:00+00:00</updated><id>/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/2024/12/20/ElasticSearch-Best-Practices</id><content type="html" xml:base="/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E/2024/12/20/ElasticSearch-Best-Practices.html"><![CDATA[<h1 id="elasticsearch-最佳实践从入门到精通">ElasticSearch 最佳实践：从入门到精通</h1>

<h2 id="简介">简介</h2>

<p>ElasticSearch 是一个基于 Lucene 的分布式搜索引擎，它提供了一个分布式的、RESTful 风格的搜索和数据分析引擎。本文将从实践角度出发，详细介绍 ElasticSearch 的核心概念、最佳实践和性能优化技巧。</p>

<h2 id="核心概念">核心概念</h2>

<h3 id="1-基础架构">1. 基础架构</h3>

<p>ElasticSearch 的基础架构主要包含以下组件：</p>

<ul>
  <li>Node（节点）：单个 ElasticSearch 实例</li>
  <li>Cluster（集群）：多个节点的集合</li>
  <li>Index（索引）：文档的集合</li>
  <li>Shard（分片）：索引的分区单元</li>
  <li>Replica（副本）：分片的备份</li>
</ul>

<h3 id="2-文档和映射">2. 文档和映射</h3>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"mappings"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"properties"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="nl">"title"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"text"</span><span class="p">,</span><span class="w">
                </span><span class="nl">"analyzer"</span><span class="p">:</span><span class="w"> </span><span class="s2">"ik_max_word"</span><span class="w">
            </span><span class="p">},</span><span class="w">
            </span><span class="nl">"content"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"text"</span><span class="p">,</span><span class="w">
                </span><span class="nl">"analyzer"</span><span class="p">:</span><span class="w"> </span><span class="s2">"ik_smart"</span><span class="w">
            </span><span class="p">},</span><span class="w">
            </span><span class="nl">"tags"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"keyword"</span><span class="w">
            </span><span class="p">},</span><span class="w">
            </span><span class="nl">"publish_date"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"date"</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h2 id="最佳实践">最佳实践</h2>

<h3 id="1-索引设计">1. 索引设计</h3>

<h4 id="分片策略">分片策略</h4>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"settings"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"number_of_shards"</span><span class="p">:</span><span class="w"> </span><span class="mi">5</span><span class="p">,</span><span class="w">
        </span><span class="nl">"number_of_replicas"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>分片数的选择考虑因素：</p>
<ul>
  <li>数据量大小</li>
  <li>节点数量</li>
  <li>查询性能要求</li>
</ul>

<h4 id="映射优化">映射优化</h4>

<ul>
  <li>合理使用字段类型</li>
  <li>控制字段数量</li>
  <li>使用适当的分词器</li>
</ul>

<h3 id="2-查询优化">2. 查询优化</h3>

<h4 id="使用查询模板">使用查询模板</h4>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"script"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"lang"</span><span class="p">:</span><span class="w"> </span><span class="s2">"mustache"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"source"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"bool"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                    </span><span class="nl">"must"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                        </span><span class="p">{</span><span class="nl">"match"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="nl">"title"</span><span class="p">:</span><span class="w"> </span><span class="s2">""</span><span class="p">}},</span><span class="w">
                        </span><span class="p">{</span><span class="nl">"range"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="nl">"publish_date"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="nl">"gte"</span><span class="p">:</span><span class="w"> </span><span class="s2">""</span><span class="p">}}}</span><span class="w">
                    </span><span class="p">]</span><span class="w">
                </span><span class="p">}</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h4 id="结果缓存">结果缓存</h4>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"settings"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"index.queries.cache.enabled"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h3 id="3-性能优化">3. 性能优化</h3>

<h4 id="内存配置">内存配置</h4>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># jvm.options</span>
<span class="s">-Xms4g</span>
<span class="s">-Xmx4g</span>
</code></pre></div></div>

<h4 id="批量操作">批量操作</h4>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">BulkRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BulkRequest</span><span class="o">();</span>
<span class="n">request</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">IndexRequest</span><span class="o">(</span><span class="s">"posts"</span><span class="o">).</span><span class="na">source</span><span class="o">(</span><span class="nc">XContentType</span><span class="o">.</span><span class="na">JSON</span><span class="o">,</span> <span class="s">"title"</span><span class="o">,</span> <span class="s">"Post 1"</span><span class="o">));</span>
<span class="n">request</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">IndexRequest</span><span class="o">(</span><span class="s">"posts"</span><span class="o">).</span><span class="na">source</span><span class="o">(</span><span class="nc">XContentType</span><span class="o">.</span><span class="na">JSON</span><span class="o">,</span> <span class="s">"title"</span><span class="o">,</span> <span class="s">"Post 2"</span><span class="o">));</span>
<span class="n">client</span><span class="o">.</span><span class="na">bulk</span><span class="o">(</span><span class="n">request</span><span class="o">,</span> <span class="nc">RequestOptions</span><span class="o">.</span><span class="na">DEFAULT</span><span class="o">);</span>
</code></pre></div></div>

<h2 id="监控与运维">监控与运维</h2>

<h3 id="1-集群健康检查">1. 集群健康检查</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>GET _cluster/health
</code></pre></div></div>

<h3 id="2-索引监控">2. 索引监控</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>GET _cat/indices?v
</code></pre></div></div>

<h3 id="3-性能监控">3. 性能监控</h3>

<p>使用 Kibana 监控面板：</p>
<ul>
  <li>JVM 堆使用情况</li>
  <li>CPU 使用率</li>
  <li>磁盘 I/O</li>
  <li>查询延迟</li>
</ul>

<h2 id="常见问题解决">常见问题解决</h2>

<h3 id="1-集群黄色状态">1. 集群黄色状态</h3>

<p>常见原因：</p>
<ul>
  <li>副本分片未分配</li>
  <li>节点资源不足</li>
</ul>

<p>解决方案：</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 检查未分配分片的原因</span>
GET _cluster/allocation/explain
</code></pre></div></div>

<h3 id="2-性能问题">2. 性能问题</h3>

<h4 id="慢查询分析">慢查询分析</h4>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 开启慢查询日志</span>
PUT _cluster/settings
<span class="o">{</span>
    <span class="s2">"transient"</span>: <span class="o">{</span>
        <span class="s2">"index.search.slowlog.threshold.query.warn"</span>: <span class="s2">"10s"</span>,
        <span class="s2">"index.search.slowlog.threshold.fetch.warn"</span>: <span class="s2">"1s"</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h4 id="内存问题">内存问题</h4>

<ul>
  <li>监控 JVM 堆使用情况</li>
  <li>适当调整 field data cache</li>
  <li>使用 scroll API 处理大结果集</li>
</ul>

<h2 id="高级特性">高级特性</h2>

<h3 id="1-聚合分析">1. 聚合分析</h3>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"aggs"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"popular_tags"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="nl">"terms"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"field"</span><span class="p">:</span><span class="w"> </span><span class="s2">"tags"</span><span class="p">,</span><span class="w">
                </span><span class="nl">"size"</span><span class="p">:</span><span class="w"> </span><span class="mi">10</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h3 id="2-地理位置搜索">2. 地理位置搜索</h3>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"geo_distance"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="nl">"distance"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1km"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"location"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"lat"</span><span class="p">:</span><span class="w"> </span><span class="mf">40.7128</span><span class="p">,</span><span class="w">
                </span><span class="nl">"lon"</span><span class="p">:</span><span class="w"> </span><span class="mf">-74.0060</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h2 id="总结">总结</h2>

<p>ElasticSearch 是一个功能强大的搜索引擎，合理使用可以大大提升应用的搜索性能。本文介绍的最佳实践和优化技巧，都是基于实际生产环境总结出来的经验。在实际应用中，需要根据具体场景做出适当的调整。</p>

<h2 id="参考资料">参考资料</h2>

<ul>
  <li><a href="https://www.elastic.co/guide/index.html">ElasticSearch 官方文档</a></li>
  <li><a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/index.html">ElasticSearch: The Definitive Guide</a></li>
  <li><a href="https://www.elastic.co/blog/performance-considerations-elasticsearch-indexing">ElasticSearch 性能优化实践</a></li>
</ul>]]></content><author><name></name></author><category term="技术分享" /><category term="搜索引擎" /><category term="ElasticSearch" /><category term="分布式搜索" /><category term="性能优化" /><summary type="html"><![CDATA[ElasticSearch 最佳实践：从入门到精通]]></summary></entry><entry><title type="html">XXL-JOB 告警扩展实现</title><link href="/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/java/2024/12/16/XxlJobAlarm.html" rel="alternate" type="text/html" title="XXL-JOB 告警扩展实现" /><published>2024-12-16T00:00:00+00:00</published><updated>2024-12-16T00:00:00+00:00</updated><id>/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/java/2024/12/16/XxlJobAlarm</id><content type="html" xml:base="/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/java/2024/12/16/XxlJobAlarm.html"><![CDATA[<h1 id="xxl-job-告警扩展实现">XXL-JOB 告警扩展实现</h1>

<h2 id="背景介绍">背景介绍</h2>

<p>XXL-JOB 是一个分布式任务调度平台，默认提供了邮件告警功能。但在企业实际应用中，我们可能需要将告警信息推送到企业微信、钉钉等更多平台。本文将详细介绍如何扩展 XXL-JOB 的告警功能。</p>

<h2 id="实现原理">实现原理</h2>

<p>XXL-JOB 提供了告警接口 <code class="language-plaintext highlighter-rouge">com.xxl.job.admin.core.alarm.JobAlarm</code>，我们只需要实现这个接口并注册到 Spring 容器中即可。告警的触发时机包括任务调度失败、任务调度成功等。</p>

<h2 id="代码实现">代码实现</h2>

<h3 id="1-添加依赖">1. 添加依赖</h3>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;dependency&gt;</span>
    <span class="nt">&lt;groupId&gt;</span>com.xxl.job<span class="nt">&lt;/groupId&gt;</span>
    <span class="nt">&lt;artifactId&gt;</span>xxl-job-admin<span class="nt">&lt;/artifactId&gt;</span>
    <span class="nt">&lt;version&gt;</span>${xxl-job.version}<span class="nt">&lt;/version&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
</code></pre></div></div>

<h3 id="2-实现告警接口">2. 实现告警接口</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Component</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CustomJobAlarm</span> <span class="kd">implements</span> <span class="nc">JobAlarm</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">Logger</span> <span class="n">logger</span> <span class="o">=</span> <span class="nc">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="nc">CustomJobAlarm</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">doAlarm</span><span class="o">(</span><span class="nc">XxlJobInfo</span> <span class="n">info</span><span class="o">,</span> <span class="nc">XxlJobLog</span> <span class="n">jobLog</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// 判断是否需要告警</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">info</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="n">jobLog</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="c1">// 构建告警信息</span>
        <span class="nc">String</span> <span class="n">alarmContent</span> <span class="o">=</span> <span class="n">buildAlarmContent</span><span class="o">(</span><span class="n">info</span><span class="o">,</span> <span class="n">jobLog</span><span class="o">);</span>

        <span class="k">try</span> <span class="o">{</span>
            <span class="c1">// 发送告警</span>
            <span class="n">sendAlarm</span><span class="o">(</span><span class="n">alarmContent</span><span class="o">);</span>
            <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">logger</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">"Custom job alarm error:"</span><span class="o">,</span> <span class="n">e</span><span class="o">);</span>
            <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="nc">String</span> <span class="nf">buildAlarmContent</span><span class="o">(</span><span class="nc">XxlJobInfo</span> <span class="n">info</span><span class="o">,</span> <span class="nc">XxlJobLog</span> <span class="n">jobLog</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">StringBuilder</span> <span class="n">content</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
        <span class="n">content</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"任务告警通知：\\n"</span><span class="o">);</span>
        <span class="n">content</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"任务ID："</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">info</span><span class="o">.</span><span class="na">getId</span><span class="o">()).</span><span class="na">append</span><span class="o">(</span><span class="s">"\\n"</span><span class="o">);</span>
        <span class="n">content</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"任务名称："</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">info</span><span class="o">.</span><span class="na">getJobDesc</span><span class="o">()).</span><span class="na">append</span><span class="o">(</span><span class="s">"\\n"</span><span class="o">);</span>
        <span class="n">content</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"执行时间："</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="nc">DateUtil</span><span class="o">.</span><span class="na">formatDateTime</span><span class="o">(</span><span class="k">new</span> <span class="nc">Date</span><span class="o">(</span><span class="n">jobLog</span><span class="o">.</span><span class="na">getTriggerTime</span><span class="o">()))).</span><span class="na">append</span><span class="o">(</span><span class="s">"\\n"</span><span class="o">);</span>
        <span class="n">content</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"执行结果："</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">jobLog</span><span class="o">.</span><span class="na">getHandleMsg</span><span class="o">()).</span><span class="na">append</span><span class="o">(</span><span class="s">"\\n"</span><span class="o">);</span>
        
        <span class="k">if</span> <span class="o">(</span><span class="n">jobLog</span><span class="o">.</span><span class="na">getHandleCode</span><span class="o">()</span> <span class="o">==</span> <span class="mi">200</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">content</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"执行状态：成功"</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="n">content</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"执行状态：失败\\n"</span><span class="o">);</span>
            <span class="n">content</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"失败原因："</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">jobLog</span><span class="o">.</span><span class="na">getTriggerMsg</span><span class="o">());</span>
        <span class="o">}</span>
        
        <span class="k">return</span> <span class="n">content</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">sendAlarm</span><span class="o">(</span><span class="nc">String</span> <span class="n">content</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// 这里实现具体的告警发送逻辑</span>
        <span class="c1">// 例如：发送到企业微信</span>
        <span class="n">sendToWecom</span><span class="o">(</span><span class="n">content</span><span class="o">);</span>
        <span class="c1">// 或发送到钉钉</span>
        <span class="n">sendToDingTalk</span><span class="o">(</span><span class="n">content</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">sendToWecom</span><span class="o">(</span><span class="nc">String</span> <span class="n">content</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">webhookUrl</span> <span class="o">=</span> <span class="s">"your-wecom-webhook-url"</span><span class="o">;</span>
        <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">message</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
        <span class="n">message</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"msgtype"</span><span class="o">,</span> <span class="s">"text"</span><span class="o">);</span>
        
        <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">String</span><span class="o">&gt;</span> <span class="n">text</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
        <span class="n">text</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"content"</span><span class="o">,</span> <span class="n">content</span><span class="o">);</span>
        <span class="n">message</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"text"</span><span class="o">,</span> <span class="n">text</span><span class="o">);</span>

        <span class="c1">// 发送HTTP请求</span>
        <span class="nc">HttpClient</span> <span class="n">client</span> <span class="o">=</span> <span class="nc">HttpClients</span><span class="o">.</span><span class="na">createDefault</span><span class="o">();</span>
        <span class="nc">HttpPost</span> <span class="n">post</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HttpPost</span><span class="o">(</span><span class="n">webhookUrl</span><span class="o">);</span>
        <span class="n">post</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">"Content-Type"</span><span class="o">,</span> <span class="s">"application/json"</span><span class="o">);</span>
        
        <span class="k">try</span> <span class="o">{</span>
            <span class="nc">StringEntity</span> <span class="n">entity</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringEntity</span><span class="o">(</span><span class="k">new</span> <span class="nc">ObjectMapper</span><span class="o">().</span><span class="na">writeValueAsString</span><span class="o">(</span><span class="n">message</span><span class="o">),</span> <span class="s">"UTF-8"</span><span class="o">);</span>
            <span class="n">post</span><span class="o">.</span><span class="na">setEntity</span><span class="o">(</span><span class="n">entity</span><span class="o">);</span>
            <span class="n">client</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">post</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">logger</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">"Send to Wecom error:"</span><span class="o">,</span> <span class="n">e</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">sendToDingTalk</span><span class="o">(</span><span class="nc">String</span> <span class="n">content</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">webhookUrl</span> <span class="o">=</span> <span class="s">"your-dingtalk-webhook-url"</span><span class="o">;</span>
        <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">message</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
        <span class="n">message</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"msgtype"</span><span class="o">,</span> <span class="s">"text"</span><span class="o">);</span>
        
        <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">String</span><span class="o">&gt;</span> <span class="n">text</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
        <span class="n">text</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"content"</span><span class="o">,</span> <span class="n">content</span><span class="o">);</span>
        <span class="n">message</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"text"</span><span class="o">,</span> <span class="n">text</span><span class="o">);</span>

        <span class="c1">// 发送HTTP请求</span>
        <span class="nc">HttpClient</span> <span class="n">client</span> <span class="o">=</span> <span class="nc">HttpClients</span><span class="o">.</span><span class="na">createDefault</span><span class="o">();</span>
        <span class="nc">HttpPost</span> <span class="n">post</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HttpPost</span><span class="o">(</span><span class="n">webhookUrl</span><span class="o">);</span>
        <span class="n">post</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">"Content-Type"</span><span class="o">,</span> <span class="s">"application/json"</span><span class="o">);</span>
        
        <span class="k">try</span> <span class="o">{</span>
            <span class="nc">StringEntity</span> <span class="n">entity</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringEntity</span><span class="o">(</span><span class="k">new</span> <span class="nc">ObjectMapper</span><span class="o">().</span><span class="na">writeValueAsString</span><span class="o">(</span><span class="n">message</span><span class="o">),</span> <span class="s">"UTF-8"</span><span class="o">);</span>
            <span class="n">post</span><span class="o">.</span><span class="na">setEntity</span><span class="o">(</span><span class="n">entity</span><span class="o">);</span>
            <span class="n">client</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">post</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">logger</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">"Send to DingTalk error:"</span><span class="o">,</span> <span class="n">e</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="3-配置文件">3. 配置文件</h3>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">xxl</span><span class="pi">:</span>
  <span class="na">job</span><span class="pi">:</span>
    <span class="na">alarm</span><span class="pi">:</span>
      <span class="na">wecom</span><span class="pi">:</span>
        <span class="na">webhook</span><span class="pi">:</span> <span class="s">${WECOM_WEBHOOK_URL:}</span>
      <span class="na">dingtalk</span><span class="pi">:</span>
        <span class="na">webhook</span><span class="pi">:</span> <span class="s">${DINGTALK_WEBHOOK_URL:}</span>
</code></pre></div></div>

<h2 id="进阶优化">进阶优化</h2>

<h3 id="1-告警级别控制">1. 告警级别控制</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">enum</span> <span class="nc">AlarmLevel</span> <span class="o">{</span>
    <span class="no">INFO</span><span class="o">,</span>
    <span class="no">WARNING</span><span class="o">,</span>
    <span class="no">ERROR</span>
<span class="o">}</span>

<span class="kd">private</span> <span class="nc">AlarmLevel</span> <span class="nf">getAlarmLevel</span><span class="o">(</span><span class="nc">XxlJobLog</span> <span class="n">jobLog</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">jobLog</span><span class="o">.</span><span class="na">getHandleCode</span><span class="o">()</span> <span class="o">==</span> <span class="mi">200</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="nc">AlarmLevel</span><span class="o">.</span><span class="na">INFO</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="c1">// 连续失败次数大于3次，升级为 ERROR</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">getConsecutiveFailures</span><span class="o">(</span><span class="n">jobLog</span><span class="o">.</span><span class="na">getJobId</span><span class="o">())</span> <span class="o">&gt;</span> <span class="mi">3</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="nc">AlarmLevel</span><span class="o">.</span><span class="na">ERROR</span><span class="o">;</span>
    <span class="o">}</span>
    
    <span class="k">return</span> <span class="nc">AlarmLevel</span><span class="o">.</span><span class="na">WARNING</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="2-告警限流">2. 告警限流</h3>

<p>为了避免告警风暴，我们可以添加告警限流机制：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Component</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">AlarmRateLimiter</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="nc">LoadingCache</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">AtomicInteger</span><span class="o">&gt;</span> <span class="n">counter</span><span class="o">;</span>
    
    <span class="kd">public</span> <span class="nf">AlarmRateLimiter</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">counter</span> <span class="o">=</span> <span class="nc">CacheBuilder</span><span class="o">.</span><span class="na">newBuilder</span><span class="o">()</span>
            <span class="o">.</span><span class="na">expireAfterWrite</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="nc">TimeUnit</span><span class="o">.</span><span class="na">HOURS</span><span class="o">)</span>
            <span class="o">.</span><span class="na">build</span><span class="o">(</span><span class="k">new</span> <span class="nc">CacheLoader</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">AtomicInteger</span><span class="o">&gt;()</span> <span class="o">{</span>
                <span class="nd">@Override</span>
                <span class="kd">public</span> <span class="nc">AtomicInteger</span> <span class="nf">load</span><span class="o">(</span><span class="nc">String</span> <span class="n">key</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">return</span> <span class="k">new</span> <span class="nf">AtomicInteger</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">});</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">shouldAlarm</span><span class="o">(</span><span class="nc">String</span> <span class="n">jobId</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="nc">AtomicInteger</span> <span class="n">count</span> <span class="o">=</span> <span class="n">counter</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">jobId</span><span class="o">);</span>
            <span class="k">return</span> <span class="n">count</span><span class="o">.</span><span class="na">incrementAndGet</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="o">;</span> <span class="c1">// 每小时最多5次告警</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="3-告警模板定制">3. 告警模板定制</h3>

<p>使用 Freemarker 或 Thymeleaf 来管理告警模板：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Component</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">AlarmTemplateManager</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="nc">Configuration</span> <span class="n">configuration</span><span class="o">;</span>
    
    <span class="kd">public</span> <span class="nf">AlarmTemplateManager</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">configuration</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Configuration</span><span class="o">(</span><span class="nc">Configuration</span><span class="o">.</span><span class="na">VERSION_2_3_31</span><span class="o">);</span>
        <span class="n">configuration</span><span class="o">.</span><span class="na">setClassForTemplateLoading</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getClass</span><span class="o">(),</span> <span class="s">"/templates"</span><span class="o">);</span>
        <span class="n">configuration</span><span class="o">.</span><span class="na">setDefaultEncoding</span><span class="o">(</span><span class="s">"UTF-8"</span><span class="o">);</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">processTemplate</span><span class="o">(</span><span class="nc">String</span> <span class="n">templateName</span><span class="o">,</span> <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="nc">Template</span> <span class="n">template</span> <span class="o">=</span> <span class="n">configuration</span><span class="o">.</span><span class="na">getTemplate</span><span class="o">(</span><span class="n">templateName</span><span class="o">);</span>
            <span class="nc">StringWriter</span> <span class="n">writer</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringWriter</span><span class="o">();</span>
            <span class="n">template</span><span class="o">.</span><span class="na">process</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="n">writer</span><span class="o">);</span>
            <span class="k">return</span> <span class="n">writer</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">logger</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">"Process template error:"</span><span class="o">,</span> <span class="n">e</span><span class="o">);</span>
            <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="最佳实践">最佳实践</h2>

<ol>
  <li><strong>分级告警</strong>
    <ul>
      <li>根据任务重要性设置不同告警级别</li>
      <li>不同级别的告警发送到不同的群组或渠道</li>
    </ul>
  </li>
  <li><strong>告警聚合</strong>
    <ul>
      <li>相同任务的多次失败告警进行聚合</li>
      <li>设置合理的告警时间窗口</li>
    </ul>
  </li>
  <li><strong>告警恢复</strong>
    <ul>
      <li>任务恢复正常后发送恢复通知</li>
      <li>记录告警恢复时间，用于统计故障时长</li>
    </ul>
  </li>
  <li><strong>监控大盘</strong>
    <ul>
      <li>统计告警频率和分布</li>
      <li>分析任务健康状况</li>
    </ul>
  </li>
</ol>

<h2 id="总结">总结</h2>

<p>通过扩展 XXL-JOB 的告警功能，我们可以：</p>

<ol>
  <li>支持多种告警渠道</li>
  <li>实现更灵活的告警策略</li>
  <li>提供更丰富的告警内容</li>
  <li>更好地监控和管理任务执行状态</li>
</ol>

<p>这些扩展不仅提高了系统的可维护性，也让运维人员能够更快速地发现和解决问题。</p>

<h2 id="参考资料">参考资料</h2>

<ul>
  <li><a href="https://www.xuxueli.com/xxl-job/">XXL-JOB官方文档</a></li>
  <li><a href="https://work.weixin.qq.com/api/doc/90000/90136/91770">企业微信群机器人配置说明</a></li>
  <li><a href="https://developers.dingtalk.com/document/robots/custom-robot-access">钉钉自定义机器人配置说明</a></li>
</ul>]]></content><author><name></name></author><category term="技术分享" /><category term="Java" /><category term="XXL-JOB" /><category term="告警" /><category term="扩展开发" /><summary type="html"><![CDATA[XXL-JOB 告警扩展实现]]></summary></entry><entry><title type="html">测试第一篇博客</title><link href="/%E6%B5%8B%E8%AF%95/%E5%8D%9A%E5%AE%A2/2024/12/13/TestFirstBlog.html" rel="alternate" type="text/html" title="测试第一篇博客" /><published>2024-12-13T00:00:00+00:00</published><updated>2024-12-13T00:00:00+00:00</updated><id>/%E6%B5%8B%E8%AF%95/%E5%8D%9A%E5%AE%A2/2024/12/13/TestFirstBlog</id><content type="html" xml:base="/%E6%B5%8B%E8%AF%95/%E5%8D%9A%E5%AE%A2/2024/12/13/TestFirstBlog.html"><![CDATA[<h1 id="欢迎来到我的第一篇博客">欢迎来到我的第一篇博客</h1>

<p>这是我的第一篇博客文章，我将在这里分享一些有趣的内容。</p>

<h2 id="为什么写博客">为什么写博客？</h2>

<p>写博客可以帮助我们：</p>

<ol>
  <li>整理思路</li>
  <li>分享知识</li>
  <li>记录成长</li>
</ol>

<h2 id="代码示例">代码示例</h2>

<p>这是一个简单的Python代码示例：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">hello_world</span><span class="p">():</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Hello, World!</span><span class="sh">"</span><span class="p">)</span>

<span class="nf">hello_world</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="总结">总结</h2>

<p>希望这篇文章能够帮助你了解我的博客风格。让我们一起在技术的道路上不断进步！</p>

<blockquote>
  <p>学习永无止境，让我们继续前进！</p>
</blockquote>]]></content><author><name></name></author><category term="测试" /><category term="博客" /><summary type="html"><![CDATA[欢迎来到我的第一篇博客]]></summary></entry></feed>